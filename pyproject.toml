[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "aioweenect"
version = "1.1.1"
description = "Asynchronous Python client for the weenect API"
license = "MIT"
authors = ["Kevin Stillhammer <kevin.stillhammer@gmail.com>"]
readme = "README.md"
repository = "http://github.com/eifinger/aioweenect"
keywords = [
    "aiohttp",
    "asyncio",
    "weenect",
    "weenect-api"
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License"
]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
aresponses = "2.1.4"
black = "21.4b2"
blacken-docs = "^1.12.0"
coverage = {version = "^6.2", extras = ["toml"]}
bandit = "^1.7.0"
codecov = "2.1.12"
codespell = "^2.1.0"
darglint = "^1.8.1"
flake8 = "4.0.1"
flake8-bandit = "^2.1.2"
flake8-bugbear = "^21.11.29"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.7.0"
flake8-docstrings = "^1.6.0"
flake8-eradicate = "^1.2.0"
flake8-markdown = "^0.3.0"
flake8-simplify = "^0.14.2"
mypy = "0.930"
pre-commit = "2.16.0"
pre-commit-hooks = "^4.1.0"
pytest = "6.2.5"
pytest-cov = "2.11.1"
pytest-asyncio = "0.16.0"
pytest-mock = "3.6.1"
pylint = "2.12.2"
pyupgrade = "^2.30.1"
safety = "^1.10.3"
vulture = "^2.3"
yamllint = "^1.26.3"

[tool.pytest.ini_options]
addopts = "--cov --cov-report term-missing --cov-report xml --cov=aioweenect tests"

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.vulture]
min_confidence = 80
paths = ["aioweenect", "tests"]

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
build_command = "pip install poetry && poetry build"
commit_subject = "chore(release): {version}"
